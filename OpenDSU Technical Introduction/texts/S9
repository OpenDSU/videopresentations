The most commonly used KeySSIs belong to the SeedSSI family of KeySSIs. The SeedSSI functions similarly to a seed phrase used in Bitcoin wallets and essentially consists of a BDNS domain and a random number. It provides write access to the anchored DSU. Typically, SeedSSIs are not shared by their owner. However, for sharing purposes, an sRead key can be derived from a SeedSSI.
The sReadSSI offers read access to the anchored DSU. The DSU is encrypted with a symmetric key that is derived from the sReadSSI. The szaSSI, on the other hand, provides Zero Access. Possessing an szaSSI implies the existence of a corresponding SeedSSI and indicates that the attached DSU has a certain number of versions.
The HashLinkSSI is utilized for storing the hash of the DSU's bricks in the brick storage. To understand all the cryptography and logic used to derive these keys, it is recommended to read the OpenDSU RFC. In essence, an szaSSI is a key that identifies the DSU on the blockchain and is stored along with the HashLinkSSIs in the form of "anchors". Both the SeedSSI and the sReadSSI are kept in wallets or key management systems and are never stored on the blockchain, as they provide write or read access to the DSUs, respectively. The sReadSSI is used to read the data and also can verify that it was signed by someone who controls the SeedSSI of the DSU.

