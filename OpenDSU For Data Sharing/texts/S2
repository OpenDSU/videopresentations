Let's start with some generic theory before explaining the OpenDSU specific approach to data sharing.
In discussing data sharing between independent organizations, three distinct patterns emerge, each with its unique approach and implications. The first pattern, Push of Heavy Messages, involves sending messages containing complete datasets to partners, akin to file transfers. This method is straightforward but can be inefficient and lacks the nuanced data integrity offered by more advanced blockchain technologies.
The second pattern, Pull Light Messaging, represents a more refined approach. It involves sending access keys to partners, allowing them to pull data as required while maintaining the source of truth with the data's creator. OpenDSU data sharing aligns with this pattern, emphasizing the importance of data integrity and controlled access. This method offers a balance between data accessibility and security, ensuring that data is available when needed but remains under the control of its originator.
The third pattern centers on the use of Shared or Distributed Databases, such as Blockchain and distributed ledger technologies. These systems are based on shared data structures within databases. This pattern is particularly effective for public data or scenarios where data integrity and immutability are paramount. However, it's not without challenges. The use of complex and as yet unproven technologies like Zero-Knowledge Proofs (ZKPs) can introduce complications. Furthermore, this pattern can suffer from scalability and performance issues, making it less suitable for certain applications.
While the Push of Heavy Messages pattern offers simplicity, it lacks the advanced data integrity features of blockchain technologies. The Pull Light Messaging pattern, exemplified by OpenDSU, strikes a balance between accessibility and control, maintaining data integrity. Lastly, the Shared or Distributed Database pattern, although robust for certain applications, faces challenges in scalability and the maturity of its underlying technologies. Each pattern has its place, but the choice depends on the specific requirements of data sharing and the desired balance between accessibility, control, and integrity.