In fact, we can delve into more detail about this process using this diagram. We see how a SeedSSI is used to derive an sReadSSI, and from this sReadSSI, an AnchorID is derived. Attached to this AnchorID are multiple HashLinks that are stored in the blockchain.
In an external system called "Bricks Storage," data is encrypted and stored in the form of bricks, which can be identified by HashLinks. We begin to distinguish two types of bricks: normal bricks that contain data from the files in DSUs, and BrickMaps, which function like a map system holding organizational information of the content, somewhat similar to a File Allocation Table in a FAT file system. These BrickMaps also include a unique, random encryption key for each brick. A file stored in a DSU may consist of one or multiple bricks. Smaller files might have just one brick, while larger files could be made up of several.
Between different versions of DSUs, files that don't change will have the same bricks, leading to storage efficiency. New bricks are created only when there is new data. However, new BrickMaps are created for each version since we are dealing with a structure akin to a Merkle tree. Therefore, any change in a file will inevitably cause changes in the content of BrickMaps.

